# Generated automatically from Makefile.in by configure.
srcdir = .
top_srcdir = ../..
top_builddir = ../..
my_dir = lib/ext2fs
INSTALL = /usr/bin/install -c


# Beginning of file MCONFIG

all::

check::

SHELL = /bin/sh

COMPRESS_EXT = gz bz2 bz Z

prefix = /home/jipeng/build-2.6.18/jipeng2.6.18-1.5-prerel-package/src/stblinux-2.6.18-0.1/uclinux-rootfs/romfs/usr
root_prefix = /home/jipeng/build-2.6.18/jipeng2.6.18-1.5-prerel-package/src/stblinux-2.6.18-0.1/uclinux-rootfs/romfs
exec_prefix = ${prefix}
root_bindir = ${root_prefix}/bin
root_sbindir = ${root_prefix}/sbin
root_libdir = ${root_prefix}/lib
bindir = ${exec_prefix}/bin
sbindir = ${exec_prefix}/sbin
libdir = ${exec_prefix}/lib
datadir= ${prefix}/share
root_sysconfdir= ${root_prefix}/etc
includedir = ${prefix}/include
mandir = ${prefix}/man
man1dir = $(mandir)/man1
man3dir = $(mandir)/man3
man8dir = $(mandir)/man8
infodir = ${prefix}/info
datadir = ${prefix}/share



INSTALL_PROGRAM = ${INSTALL}
INSTALL_DATA = ${INSTALL} -m 644
CC = mipsel-linux-gcc
BUILD_CC = gcc
DEFS =  -DENABLE_HTREE=1 -DENABLE_SWAPFS=1 -DPACKAGE=\"e2fsprogs\" -DVERSION=\"1.30\" -DSTDC_HEADERS=1 -DHAVE_ALLOCA_H=1 -DHAVE_ALLOCA=1 -DHAVE_UNISTD_H=1 -DHAVE_GETPAGESIZE=1 -DHAVE_LIMITS_H=1 -DHAVE_LOCALE_H=1 -DHAVE_NL_TYPES_H=1 -DHAVE_MALLOC_H=1 -DHAVE_STRING_H=1 -DHAVE_UNISTD_H=1 -DHAVE_SYS_PARAM_H=1 -DHAVE_GETCWD=1 -DHAVE_MUNMAP=1 -DHAVE_PUTENV=1 -DHAVE_SETENV=1 -DHAVE_SETLOCALE=1 -DHAVE_STRCHR=1 -DHAVE_STRCASECMP=1 -DHAVE_STRDUP=1 -DHAVE_STPCPY=1 -DHAVE_LC_MESSAGES=1 -DHAVE_STDLIB_H=1 -DHAVE_UNISTD_H=1 -DHAVE_STDARG_H=1 -DHAVE_ERRNO_H=1 -DHAVE_MALLOC_H=1 -DHAVE_MNTENT_H=1 -DHAVE_PATHS_H=1 -DHAVE_DIRENT_H=1 -DHAVE_GETOPT_H=1 -DHAVE_SETJMP_H=1 -DHAVE_SIGNAL_H=1 -DHAVE_TERMIOS_H=1 -DHAVE_LINUX_FD_H=1 -DHAVE_LINUX_MAJOR_H=1 -DHAVE_SYS_IOCTL_H=1 -DHAVE_SYS_MOUNT_H=1 -DHAVE_SYS_SYSMACROS_H=1 -DHAVE_SYS_TIME_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_NET_IF_H=1 -DHAVE_NETINET_IN_H=1 -DHAVE_VPRINTF=1 -DHAVE_LSEEK64_PROTOTYPE=1 -DSIZEOF_SHORT=2 -DSIZEOF_INT=4 -DSIZEOF_LONG=4 -DSIZEOF_LONG_LONG=8 -DHAVE_GETRUSAGE=1 -DHAVE_LLSEEK=1 -DHAVE_LSEEK64=1 -DHAVE_OPEN64=1 -DHAVE_STRCASECMP=1 -DHAVE_SRANDOM=1 -DHAVE_FCHOWN=1 -DHAVE_MALLINFO=1 -DHAVE_FDATASYNC=1 -DHAVE_STRNLEN=1 -DHAVE_SYSCONF=1 -DHAVE_PATHCONF=1 -DHAVE_EXT2_IOCTLS=1 
CFLAGS = -g -O2
CPPFLAGS = 
ALL_CFLAGS = $(CPPFLAGS) $(DEFS) $(USE_WFLAGS) $(CFLAGS) $(XTRA_CFLAGS) \
	-I$(top_builddir)/lib -I$(top_srcdir)/lib $(LINUX_INCLUDE) 
LDFLAGS = 
ALL_LDFLAGS = $(LDFLAGS)
RM = /bin/rm
LN = /bin/ln
LN_S = ln -s
MV = /bin/mv
CP = /bin/cp
CHMOD = /bin/chmod
AR = mipsel-linux-ar
AWK = /usr/bin/awk
SED = /bin/sed
PERL = /usr/bin/perl
RANLIB = mipsel-linux-ranlib
STRIP = mipsel-linux-strip
LD = $(PURE) mipsel-linux-gcc
ARUPD = $(AR) r
LDCONFIG = /sbin/ldconfig

#
# Library definitions
#
LIB = $(top_builddir)/lib
LIBSS = $(LIB)/libss.so
LIBCOM_ERR = $(LIB)/libcom_err.so
LIBE2P = $(LIB)/libe2p.so
LIBEXT2FS = $(LIB)/libext2fs.so
LIBUUID = $(LIB)/libuuid.so  
DEPLIBUUID = $(LIB)/libuuid.so

STATIC_LIBSS = $(LIB)/libss.a
STATIC_LIBCOM_ERR = $(LIB)/libcom_err.a
STATIC_LIBE2P = $(LIB)/libe2p.a
STATIC_LIBEXT2FS = $(LIB)/libext2fs.a
STATIC_LIBUUID = $(LIB)/libuuid.a  
DEPSTATIC_LIBUUID = $(LIB)/libuuid.a

PROFILED_LIBSS = $(LIB)/libss
PROFILED_LIBCOM_ERR = $(LIB)/libcom_err
PROFILED_LIBE2P = $(LIB)/libe2p
PROFILED_LIBEXT2FS = $(LIB)/libext2fs
PROFILED_LIBUUID = $(LIB)/libuuid  
DEPPROFILED_LIBUUID = $(LIB)/libuuid

#
# Use these definitions is you use tools 2.x, x < 16
#
#DLL_BIN=/usr/dll/bin
#JUMP_PREFIX=/usr/dll/jump/

#
# Use these definitions if you use tools 2.16 or above
#
DLL_BIN=/usr/bin
JUMP_PREFIX=/usr/bin/jump

# An include directive pointing to a directory holding enough linux-like
# include files to satisfy some programs here
LINUX_INCLUDE=

#
# A fast substitution command for fixing up man pages, shell scripts, etc.
#
SUBST_CONF=$(top_builddir)/util/subst.conf
SUBSTITUTE= $(top_builddir)/util/subst -f $(SUBST_CONF)
DEP_SUBSTITUTE= $(top_builddir)/util/subst $(SUBST_CONF)

$(top_builddir)/util/subst:
	cd $(top_builddir)/util ; $(MAKE) subst

#
# Warning flags
#
# Run make gcc-wall to do a build with warning messages.
#
#
WFLAGS=		-ansi -D_POSIX_SOURCE -pedantic \
			-Wall -Wwrite-strings -Wpointer-arith \
			-Wcast-qual -Wcast-align -Wtraditional \
			-Wstrict-prototypes -Wmissing-prototypes \
			-Wnested-externs -Winline -DNO_INLINE_FUNCS -Wshadow 

gcc-wall-new:
	(make USE_WFLAGS="$(WFLAGS)" > /dev/null) 2>&1 | sed -f $(top_srcdir)/util/gcc-wall-cleanup 

gcc-wall:
	make clean > /dev/null
	make gcc-wall-new

#
# Installation user and groups
#
BINGRP=		bin
BINOWN=		bin
BINMODE=	555
INCGRP=		bin
INCOWN=		bin
INCMODE=	444
LIBOWN=		bin
LIBGRP=		bin
LIBMODE=	444
MANGRP=		bin
MANOWN=		bin
MANMODE=	444

#
# Autoconf magic...
#

DEP_LIB_MAKEFILES = $(top_srcdir)/lib/Makefile.elf-lib  \
	$(top_srcdir)/lib/Makefile.dll-lib $(top_srcdir)/lib/Makefile.bsd-lib \
	$(top_srcdir)/lib/Makefile.checker $(top_srcdir)/lib/Makefile.profile

$(top_builddir)/config.status: $(top_srcdir)/configure
	cd $(top_builddir); ./config.status --recheck

$(top_builddir)/MCONFIG: $(top_srcdir)/MCONFIG.in $(top_builddir)/config.status
	cd $(top_builddir); CONFIG_FILES=MCONFIG ./config.status

$(top_builddir)/lib/substitute_sh: $(top_srcdir)/lib/substitute_sh.in \
		$(top_builddir)/config.status
	cd $(top_builddir); CONFIG_FILES=lib/substitute_sh ./config.status

$(top_builddir)/util/subst.conf: $(top_srcdir)/util/subst.conf.in \
		$(top_builddir)/config.status
	cd $(top_builddir); CONFIG_FILES=util/subst.conf ./config.status

Makefile: $(srcdir)/Makefile.in $(top_builddir)/MCONFIG \
		$(DEP_MAKEFILE) $(top_builddir)/config.status
	cd $(top_builddir); CONFIG_FILES=$(my_dir)/Makefile ./config.status

$(top_srcdir)/configure: $(top_srcdir)/configure.in
	cd $(top_srcdir) && autoconf

#
# Make depend magic...
#

.depend: Makefile $(SRCS) $(top_srcdir)/depfix.sed $(top_srcdir)/wordwrap.pl
	if test -n "$(SRCS)" ; then \
		$(CC) -M $(ALL_CFLAGS) $(SRCS) | \
			$(SED) -f $(top_srcdir)/depfix.sed \
			    -e 's; $(srcdir)/; $$(srcdir)/;g' \
			    -e 's; $(top_srcdir)/; $$(top_srcdir)/;g' \
			    -e 's; $(top_builddir)/; $$(top_builddir)/;g' \
			    -e 's; \./; ;g' \
			    -e '/^ *\\$$/d' | \
			$(PERL) $(top_srcdir)/wordwrap.pl > .depend; \
	else :; fi

depend:: .depend
	if test -n "$(SRCS)" ; then \
		sed -e '/^# +++ Dependency line eater +++/,$$d' \
			< $(srcdir)/Makefile.in | cat - .depend \
			> $(srcdir)/Makefile.in.new; \
	if cmp -s $(srcdir)/Makefile.in $(srcdir)/Makefile.in.new ; then \
		$(RM) $(srcdir)/Makefile.in.new ; \
	else \
		$(MV) $(srcdir)/Makefile.in $(srcdir)/Makefile.in.old; \
		$(MV) $(srcdir)/Makefile.in.new $(srcdir)/Makefile.in; \
	fi ; else :; fi

# End of file MCONFIG

DEBUGFS_LIB_OBJS = bb_compat.o cmp_bitmaps.o fileio.o \
	inode_io.o namei.o write_bb_file.o 

RESIZE_LIB_OBJS = rs_bitmap.o dupfs.o test_io.o 

E2IMAGE_LIB_OBJS = imager.o

OBJS= $(DEBUGFS_LIB_OBJS) $(RESIZE_LIB_OBJS) $(E2IMAGE_LIB_OBJS) \
	ext2_err.o \
	alloc.o \
	alloc_stats.o \
	alloc_tables.o \
	badblocks.o \
	bb_inode.o \
	bitmaps.o \
	bitops.o \
	block.o \
	bmap.o \
	check_desc.o \
	closefs.o \
	dblist.o \
	dblist_dir.o \
	dirblock.o \
	dirhash.o \
	dir_iterate.o \
	expanddir.o \
	ext_attr.o \
	finddev.o \
	flushb.o \
	freefs.o \
	gen_bitmap.o \
	get_pathname.o \
	getsize.o \
	icount.o \
	initialize.o \
	inline.o \
	inode.o \
	ismounted.o \
	link.o \
	llseek.o \
	lookup.o \
	mkdir.o \
	mkjournal.o \
	native.o \
	newdir.o \
	openfs.o \
	read_bb.o \
	read_bb_file.o \
	rw_bitmaps.o \
	swapfs.o \
	unix_io.o \
	unlink.o \
	valid_blk.o \
	version.o

SRCS= ext2_err.c \
	$(srcdir)/alloc.c \
	$(srcdir)/alloc_stats.c \
	$(srcdir)/alloc_tables.c \
	$(srcdir)/badblocks.c \
	$(srcdir)/bb_compat.c \
	$(srcdir)/bb_inode.c \
	$(srcdir)/bitmaps.c \
	$(srcdir)/bitops.c \
	$(srcdir)/block.c \
	$(srcdir)/bmap.c \
	$(srcdir)/check_desc.c \
	$(srcdir)/closefs.c \
	$(srcdir)/cmp_bitmaps.c \
	$(srcdir)/dblist.c \
	$(srcdir)/dblist_dir.c \
	$(srcdir)/dirblock.c \
	$(srcdir)/dirhash.c \
	$(srcdir)/dir_iterate.c \
	$(srcdir)/dupfs.c \
	$(srcdir)/expanddir.c \
	$(srcdir)/ext_attr.c \
	$(srcdir)/fileio.c \
	$(srcdir)/finddev.c \
	$(srcdir)/flushb.c \
	$(srcdir)/freefs.c \
	$(srcdir)/gen_bitmap.c \
	$(srcdir)/get_pathname.c \
	$(srcdir)/getsize.c \
	$(srcdir)/icount.c \
	$(srcdir)/imager.c \
	$(srcdir)/initialize.c \
	$(srcdir)/inline.c \
	$(srcdir)/inode.c \
	$(srcdir)/inode_io.c \
	$(srcdir)/ismounted.c \
	$(srcdir)/link.c \
	$(srcdir)/llseek.c \
	$(srcdir)/lookup.c \
	$(srcdir)/mkdir.c \
	$(srcdir)/mkjournal.c \
	$(srcdir)/namei.c \
	$(srcdir)/native.c \
	$(srcdir)/newdir.c \
	$(srcdir)/openfs.c \
	$(srcdir)/read_bb.c \
	$(srcdir)/read_bb_file.c \
	$(srcdir)/rs_bitmap.c \
	$(srcdir)/rw_bitmaps.c \
	$(srcdir)/swapfs.c \
	$(srcdir)/test_io.c \
	$(srcdir)/unix_io.c \
	$(srcdir)/unlink.c \
	$(srcdir)/valid_blk.c \
	$(srcdir)/version.c \
	$(srcdir)/write_bb_file.c \
	$(srcdir)/tst_badblocks.c \
	$(srcdir)/tst_bitops.c \
	$(srcdir)/tst_byteswap.c \
	$(srcdir)/tst_getsize.c \
	$(srcdir)/tst_iscan.c

HFILES= bitops.h ext2fs.h ext2_io.h ext2_fs.h ext2_ext_attr.h
HFILES_IN=  ext2_err.h ext2_types.h

LIBRARY= libext2fs
LIBDIR= ext2fs

DLL_ADDRESS = 0x66900000
DLL_JUMPSIZE = 0x1000
DLL_GOTSIZE  = 0x1000
DLL_VERSION = 1.2
DLL_IMAGE = libe2fs
DLL_STUB = libext2fs
DLL_LIBS = -L../.. -lcom_err
DLL_MYDIR = ext2fs
DLL_INSTALL_DIR = $(root_libdir)

ELF_VERSION = 2.4
ELF_SO_VERSION = 2
ELF_IMAGE = libext2fs
ELF_MYDIR = ext2fs
ELF_INSTALL_DIR = $(root_libdir)
ELF_OTHER_LIBS = -L../.. -lcom_err

BSDLIB_VERSION = 2.1
BSDLIB_IMAGE = libext2fs
BSDLIB_MYDIR = ext2fs
BSDLIB_INSTALL_DIR = $(root_libdir)


all:: subdirs $(LIBRARY).a

install-shlibs::

subdirs::

# THT: 09/24/04 Replace hardlink with symlinks.  Hardlink does not work
# when building using a Clearcase dynamic view 
# (complains about cross-device link).
$(LIBRARY).a: $(OBJS)
	(if test -r $@; then $(RM) -f $@.bak && $(MV) $@ $@.bak; fi)
	$(ARUPD) $@ $(OBJS)
	-$(RANLIB) $@
	$(RM) -f ../$@
	$(LN) $@ ../$@



#
# This is a Makefile stub which handles the creation of Linux ELF shared
# libraries.
#
# In order to use this stub, the following makefile variables must be defined.
# 
# ELF_VERSION = 1.0
# ELF_SO_VERSION = 1
# ELF_IMAGE = libce
# ELF_MYDIR = et
# ELF_INSTALL_DIR = $(SHLIBDIR)
# ELF_OTHER_LIBS = -lc

all:: elfshared image

subdirs:: elfshared

elfshared:
	mkdir elfshared

ELF_LIB = $(ELF_IMAGE).so.$(ELF_VERSION)
ELF_SONAME = $(ELF_IMAGE).so.$(ELF_SO_VERSION)

image:		$(ELF_LIB)

$(ELF_LIB): $(OBJS)
	(cd elfshared; $(CC) --shared -o $(ELF_LIB) -Wl,-soname,$(ELF_SONAME) \
		$(OBJS) $(ELF_OTHER_LIBS))
	$(MV) elfshared/$(ELF_LIB) .
	$(RM) -f ../$(ELF_LIB) ../$(ELF_IMAGE).so ../$(ELF_SONAME)
	$(LN) $(ELF_LIB) ../$(ELF_LIB)
	$(LN) ../$(ELF_LIB) ../$(ELF_IMAGE).so
	$(LN) ../$(ELF_LIB) ../$(ELF_SONAME)

installdirs-elf-lib::
	$(top_srcdir)/mkinstalldirs $(DESTDIR)$(ELF_INSTALL_DIR) \
		$(DESTDIR)$(libdir)

installdirs:: installdirs-elf-lib

install-shlibs install:: $(ELF_LIB) installdirs-elf-lib
	$(INSTALL_PROGRAM) $(ELF_LIB) $(DESTDIR)$(ELF_INSTALL_DIR)/$(ELF_LIB)
	$(STRIP) --strip-debug \
		$(DESTDIR)$(ELF_INSTALL_DIR)/$(ELF_LIB)
	$(LN_S) -f $(ELF_LIB) $(DESTDIR)$(ELF_INSTALL_DIR)/$(ELF_SONAME)
	$(LN_S) -f $(ELF_INSTALL_DIR)/$(ELF_SONAME) \
		$(DESTDIR)$(libdir)/$(ELF_IMAGE).so
	-$(LDCONFIG)

uninstall-shlibs uninstall::
	$(RM) -f $(DESTDIR)$(ELF_INSTALL_DIR)/$(ELF_LIB) \
		$(DESTDIR)$(ELF_INSTALL_DIR)/$(ELF_SONAME) \
		$(DESTDIR)$(libdir)/$(ELF_IMAGE).so
	-$(LDCONFIG)

clean::
	$(RM) -rf elfshared
	$(RM) -f $(ELF_LIB)
	$(RM) -f ../$(ELF_LIB) ../$(ELF_IMAGE).so ../$(ELF_SONAME)




.c.o:
	$(CC) $(ALL_CFLAGS) -c $< -o $@
#	$(CC) $(ALL_CFLAGS) -g -pg -o profiled/$*.o -c $<
#	$(CC) $(ALL_CFLAGS) -checker -g -o checker/$*.o -c $<
#	(export JUMP_DIR=`pwd`/jump; $(CC) -B$(JUMP_PREFIX) $(ALL_CFLAGS) \
#		-o jump/$*.o -c $<)
	$(CC) $(ALL_CFLAGS) -fPIC -o elfshared/$*.o -c $<
#	$(CC) $(ALL_CFLAGS) -fpic -o pic/$*.o -c $<

COMPILE_ET=../et/compile_et

DISTFILES= Makefile *.c *.h image

ext2_err.et: $(DEP_SUBSTITUTE) $(srcdir)/ext2_err.et.in
	$(SUBSTITUTE) $(srcdir)/ext2_err.et.in ext2_err.et

ext2_err.c ext2_err.h: ext2_err.et
	$(COMPILE_ET) ext2_err.et

tst_badblocks: tst_badblocks.o freefs.o \
		read_bb_file.o write_bb_file.o badblocks.o 
	$(CC) -o tst_badblocks tst_badblocks.o freefs.o \
		read_bb_file.o write_bb_file.o badblocks.o \
		inline.o bitops.o gen_bitmap.o $(LIBCOM_ERR)

tst_iscan: tst_iscan.o inode.o badblocks.o test_io.o $(STATIC_LIBEXT2FS)
	$(CC) -o tst_iscan tst_iscan.o inode.o badblocks.o test_io.o \
		$(STATIC_LIBEXT2FS) $(LIBCOM_ERR)

tst_getsize: tst_getsize.o getsize.o $(STATIC_LIBEXT2FS)
	$(CC) -o tst_getsize tst_getsize.o getsize.o $(STATIC_LIBEXT2FS) \
		$(LIBCOM_ERR)

tst_ismounted: $(srcdir)/ismounted.c $(STATIC_LIBEXT2FS)
	$(CC) -o tst_ismounted $(srcdir)/ismounted.c -DDEBUG $(ALL_CFLAGS) $(LIBCOM_ERR) 

tst_byteswap: tst_byteswap.o bitops.o $(STATIC_LIBEXT2FS)
	$(CC) -o tst_byteswap tst_byteswap.o bitops.o $(STATIC_LIBEXT2FS) \
		$(LIBCOM_ERR)

tst_bitops: tst_bitops.o inline.o $(STATIC_LIBEXT2FS)
	$(CC) -o tst_bitops tst_bitops.o inline.o \
		$(STATIC_LIBEXT2FS) $(LIBCOM_ERR)

mkjournal: mkjournal.c $(STATIC_LIBEXT2FS)
	$(CC) -o mkjournal $(srcdir)/mkjournal.c -DDEBUG $(STATIC_LIBEXT2FS) $(LIBCOM_ERR) $(ALL_CFLAGS)

check:: tst_badblocks tst_iscan tst_byteswap
	LD_LIBRARY_PATH=$(LIB) ./tst_badblocks
	LD_LIBRARY_PATH=$(LIB) ./tst_iscan
	LD_LIBRARY_PATH=$(LIB) ./tst_byteswap

installdirs::
	$(top_srcdir)/mkinstalldirs $(DESTDIR)$(libdir) \
		$(DESTDIR)$(includedir)/ext2fs

install:: all $(HFILES) $(HFILES_IN) installdirs 
	$(INSTALL_DATA) libext2fs.a $(DESTDIR)$(libdir)/libext2fs.a
	$(CHMOD) 644 $(DESTDIR)$(libdir)/libext2fs.a
	-$(RANLIB) $(DESTDIR)$(libdir)/libext2fs.a
	$(CHMOD) $(LIBMODE) $(DESTDIR)$(libdir)/libext2fs.a
	for i in $(HFILES); do \
		$(INSTALL_DATA) $(srcdir)/$$i $(DESTDIR)$(includedir)/ext2fs/$$i; \
	done
	for i in $(HFILES_IN); do \
		$(INSTALL_DATA) $$i $(DESTDIR)$(includedir)/ext2fs/$$i; \
	done

uninstall::
	$(RM) -f $(DESTDIR)$(libdir)/libext2fs.a
	$(RM) -rf $(DESTDIR)$(includedir)/ext2fs

clean::
	$(RM) -f \#* *.s *.o *.a *~ *.bak core profiled/* checker/* \
		tst_badblocks tst_iscan ext2_err.et ext2_err.c ext2_err.h \
		tst_byteswap tst_ismounted mkjournal \
		../libext2fs.a ../libext2fs_p.a ../libext2fs_chk.a

mostlyclean:: clean
distclean:: clean
	$(RM) -f .depend ext2_err.c ext2_err.h Makefile \
		$(srcdir)/TAGS $(srcdir)/Makefile.in.old
#
# Hack to parallel makes recognize dependencies correctly.
#
$(top_builddir)/lib/ext2fs/ext2_err.h: ext2_err.h

# +++ Dependency line eater +++
# 
# Makefile dependencies follow.  This must be the last section in
# the Makefile.in file
#
ext2_err.o: ext2_err.c
alloc.o: $(srcdir)/alloc.c $(srcdir)/ext2_fs.h \
 $(top_builddir)/lib/ext2fs/ext2_types.h $(srcdir)/ext2fs.h \
 $(top_srcdir)/lib/et/com_err.h $(srcdir)/ext2_io.h \
 $(top_builddir)/lib/ext2fs/ext2_err.h $(srcdir)/bitops.h
alloc_stats.o: $(srcdir)/alloc_stats.c $(srcdir)/ext2_fs.h \
 $(top_builddir)/lib/ext2fs/ext2_types.h $(srcdir)/ext2fs.h \
 $(top_srcdir)/lib/et/com_err.h $(srcdir)/ext2_io.h \
 $(top_builddir)/lib/ext2fs/ext2_err.h $(srcdir)/bitops.h
alloc_tables.o: $(srcdir)/alloc_tables.c $(srcdir)/ext2_fs.h \
 $(top_builddir)/lib/ext2fs/ext2_types.h $(srcdir)/ext2fs.h \
 $(top_srcdir)/lib/et/com_err.h $(srcdir)/ext2_io.h \
 $(top_builddir)/lib/ext2fs/ext2_err.h $(srcdir)/bitops.h
badblocks.o: $(srcdir)/badblocks.c $(srcdir)/ext2_fs.h \
 $(top_builddir)/lib/ext2fs/ext2_types.h $(srcdir)/ext2fsP.h \
 $(srcdir)/ext2fs.h $(top_srcdir)/lib/et/com_err.h $(srcdir)/ext2_io.h \
 $(top_builddir)/lib/ext2fs/ext2_err.h $(srcdir)/bitops.h
bb_compat.o: $(srcdir)/bb_compat.c $(srcdir)/ext2_fs.h \
 $(top_builddir)/lib/ext2fs/ext2_types.h $(srcdir)/ext2fsP.h \
 $(srcdir)/ext2fs.h $(top_srcdir)/lib/et/com_err.h $(srcdir)/ext2_io.h \
 $(top_builddir)/lib/ext2fs/ext2_err.h $(srcdir)/bitops.h
bb_inode.o: $(srcdir)/bb_inode.c $(srcdir)/ext2_fs.h \
 $(top_builddir)/lib/ext2fs/ext2_types.h $(srcdir)/ext2fs.h \
 $(top_srcdir)/lib/et/com_err.h $(srcdir)/ext2_io.h \
 $(top_builddir)/lib/ext2fs/ext2_err.h $(srcdir)/bitops.h
bitmaps.o: $(srcdir)/bitmaps.c $(srcdir)/ext2_fs.h \
 $(top_builddir)/lib/ext2fs/ext2_types.h $(srcdir)/ext2fs.h \
 $(top_srcdir)/lib/et/com_err.h $(srcdir)/ext2_io.h \
 $(top_builddir)/lib/ext2fs/ext2_err.h $(srcdir)/bitops.h
bitops.o: $(srcdir)/bitops.c $(srcdir)/ext2_fs.h \
 $(top_builddir)/lib/ext2fs/ext2_types.h $(srcdir)/ext2fs.h \
 $(top_srcdir)/lib/et/com_err.h $(srcdir)/ext2_io.h \
 $(top_builddir)/lib/ext2fs/ext2_err.h $(srcdir)/bitops.h
block.o: $(srcdir)/block.c $(srcdir)/ext2_fs.h \
 $(top_builddir)/lib/ext2fs/ext2_types.h $(srcdir)/ext2fs.h \
 $(top_srcdir)/lib/et/com_err.h $(srcdir)/ext2_io.h \
 $(top_builddir)/lib/ext2fs/ext2_err.h $(srcdir)/bitops.h
bmap.o: $(srcdir)/bmap.c $(srcdir)/ext2_fs.h \
 $(top_builddir)/lib/ext2fs/ext2_types.h $(srcdir)/ext2fs.h \
 $(top_srcdir)/lib/et/com_err.h $(srcdir)/ext2_io.h \
 $(top_builddir)/lib/ext2fs/ext2_err.h $(srcdir)/bitops.h
check_desc.o: $(srcdir)/check_desc.c $(srcdir)/ext2_fs.h \
 $(top_builddir)/lib/ext2fs/ext2_types.h $(srcdir)/ext2fs.h \
 $(top_srcdir)/lib/et/com_err.h $(srcdir)/ext2_io.h \
 $(top_builddir)/lib/ext2fs/ext2_err.h $(srcdir)/bitops.h
closefs.o: $(srcdir)/closefs.c $(srcdir)/ext2_fs.h \
 $(top_builddir)/lib/ext2fs/ext2_types.h $(srcdir)/ext2fsP.h \
 $(srcdir)/ext2fs.h $(top_srcdir)/lib/et/com_err.h $(srcdir)/ext2_io.h \
 $(top_builddir)/lib/ext2fs/ext2_err.h $(srcdir)/bitops.h
cmp_bitmaps.o: $(srcdir)/cmp_bitmaps.c $(srcdir)/ext2_fs.h \
 $(top_builddir)/lib/ext2fs/ext2_types.h $(srcdir)/ext2fs.h \
 $(top_srcdir)/lib/et/com_err.h $(srcdir)/ext2_io.h \
 $(top_builddir)/lib/ext2fs/ext2_err.h $(srcdir)/bitops.h
dblist.o: $(srcdir)/dblist.c $(srcdir)/ext2_fs.h \
 $(top_builddir)/lib/ext2fs/ext2_types.h $(srcdir)/ext2fsP.h \
 $(srcdir)/ext2fs.h $(top_srcdir)/lib/et/com_err.h $(srcdir)/ext2_io.h \
 $(top_builddir)/lib/ext2fs/ext2_err.h $(srcdir)/bitops.h
dblist_dir.o: $(srcdir)/dblist_dir.c $(srcdir)/ext2_fs.h \
 $(top_builddir)/lib/ext2fs/ext2_types.h $(srcdir)/ext2fsP.h \
 $(srcdir)/ext2fs.h $(top_srcdir)/lib/et/com_err.h $(srcdir)/ext2_io.h \
 $(top_builddir)/lib/ext2fs/ext2_err.h $(srcdir)/bitops.h
dirblock.o: $(srcdir)/dirblock.c $(srcdir)/ext2_fs.h \
 $(top_builddir)/lib/ext2fs/ext2_types.h $(srcdir)/ext2fs.h \
 $(top_srcdir)/lib/et/com_err.h $(srcdir)/ext2_io.h \
 $(top_builddir)/lib/ext2fs/ext2_err.h $(srcdir)/bitops.h
dirhash.o: $(srcdir)/dirhash.c $(srcdir)/ext2_fs.h \
 $(top_builddir)/lib/ext2fs/ext2_types.h $(srcdir)/ext2fs.h \
 $(top_srcdir)/lib/et/com_err.h $(srcdir)/ext2_io.h \
 $(top_builddir)/lib/ext2fs/ext2_err.h $(srcdir)/bitops.h
dir_iterate.o: $(srcdir)/dir_iterate.c $(srcdir)/ext2_fs.h \
 $(top_builddir)/lib/ext2fs/ext2_types.h $(srcdir)/ext2fsP.h \
 $(srcdir)/ext2fs.h $(top_srcdir)/lib/et/com_err.h $(srcdir)/ext2_io.h \
 $(top_builddir)/lib/ext2fs/ext2_err.h $(srcdir)/bitops.h
dupfs.o: $(srcdir)/dupfs.c $(srcdir)/ext2_fs.h \
 $(top_builddir)/lib/ext2fs/ext2_types.h $(srcdir)/ext2fsP.h \
 $(srcdir)/ext2fs.h $(top_srcdir)/lib/et/com_err.h $(srcdir)/ext2_io.h \
 $(top_builddir)/lib/ext2fs/ext2_err.h $(srcdir)/bitops.h
expanddir.o: $(srcdir)/expanddir.c $(srcdir)/ext2_fs.h \
 $(top_builddir)/lib/ext2fs/ext2_types.h $(srcdir)/ext2fs.h \
 $(top_srcdir)/lib/et/com_err.h $(srcdir)/ext2_io.h \
 $(top_builddir)/lib/ext2fs/ext2_err.h $(srcdir)/bitops.h
ext_attr.o: $(srcdir)/ext_attr.c $(srcdir)/ext2_fs.h \
 $(top_builddir)/lib/ext2fs/ext2_types.h $(srcdir)/ext2_ext_attr.h \
 $(srcdir)/ext2fs.h $(top_srcdir)/lib/et/com_err.h $(srcdir)/ext2_io.h \
 $(top_builddir)/lib/ext2fs/ext2_err.h $(srcdir)/bitops.h
fileio.o: $(srcdir)/fileio.c $(srcdir)/ext2_fs.h \
 $(top_builddir)/lib/ext2fs/ext2_types.h $(srcdir)/ext2fs.h \
 $(top_srcdir)/lib/et/com_err.h $(srcdir)/ext2_io.h \
 $(top_builddir)/lib/ext2fs/ext2_err.h $(srcdir)/bitops.h
finddev.o: $(srcdir)/finddev.c $(srcdir)/ext2_fs.h \
 $(top_builddir)/lib/ext2fs/ext2_types.h $(srcdir)/ext2fs.h \
 $(top_srcdir)/lib/et/com_err.h $(srcdir)/ext2_io.h \
 $(top_builddir)/lib/ext2fs/ext2_err.h $(srcdir)/bitops.h
flushb.o: $(srcdir)/flushb.c $(srcdir)/ext2_fs.h \
 $(top_builddir)/lib/ext2fs/ext2_types.h $(srcdir)/ext2fs.h \
 $(top_srcdir)/lib/et/com_err.h $(srcdir)/ext2_io.h \
 $(top_builddir)/lib/ext2fs/ext2_err.h $(srcdir)/bitops.h
freefs.o: $(srcdir)/freefs.c $(srcdir)/ext2_fs.h \
 $(top_builddir)/lib/ext2fs/ext2_types.h $(srcdir)/ext2fsP.h \
 $(srcdir)/ext2fs.h $(top_srcdir)/lib/et/com_err.h $(srcdir)/ext2_io.h \
 $(top_builddir)/lib/ext2fs/ext2_err.h $(srcdir)/bitops.h
gen_bitmap.o: $(srcdir)/gen_bitmap.c $(srcdir)/ext2_fs.h \
 $(top_builddir)/lib/ext2fs/ext2_types.h $(srcdir)/ext2fs.h \
 $(top_srcdir)/lib/et/com_err.h $(srcdir)/ext2_io.h \
 $(top_builddir)/lib/ext2fs/ext2_err.h $(srcdir)/bitops.h
get_pathname.o: $(srcdir)/get_pathname.c $(srcdir)/ext2_fs.h \
 $(top_builddir)/lib/ext2fs/ext2_types.h $(srcdir)/ext2fs.h \
 $(top_srcdir)/lib/et/com_err.h $(srcdir)/ext2_io.h \
 $(top_builddir)/lib/ext2fs/ext2_err.h $(srcdir)/bitops.h
getsize.o: $(srcdir)/getsize.c $(srcdir)/ext2_fs.h \
 $(top_builddir)/lib/ext2fs/ext2_types.h $(srcdir)/ext2fs.h \
 $(top_srcdir)/lib/et/com_err.h $(srcdir)/ext2_io.h \
 $(top_builddir)/lib/ext2fs/ext2_err.h $(srcdir)/bitops.h
icount.o: $(srcdir)/icount.c $(srcdir)/ext2_fs.h \
 $(top_builddir)/lib/ext2fs/ext2_types.h $(srcdir)/ext2fs.h \
 $(top_srcdir)/lib/et/com_err.h $(srcdir)/ext2_io.h \
 $(top_builddir)/lib/ext2fs/ext2_err.h $(srcdir)/bitops.h
imager.o: $(srcdir)/imager.c $(srcdir)/ext2_fs.h \
 $(top_builddir)/lib/ext2fs/ext2_types.h $(srcdir)/ext2fs.h \
 $(top_srcdir)/lib/et/com_err.h $(srcdir)/ext2_io.h \
 $(top_builddir)/lib/ext2fs/ext2_err.h $(srcdir)/bitops.h
initialize.o: $(srcdir)/initialize.c $(srcdir)/ext2_fs.h \
 $(top_builddir)/lib/ext2fs/ext2_types.h $(srcdir)/ext2fs.h \
 $(top_srcdir)/lib/et/com_err.h $(srcdir)/ext2_io.h \
 $(top_builddir)/lib/ext2fs/ext2_err.h $(srcdir)/bitops.h
inline.o: $(srcdir)/inline.c $(srcdir)/ext2_fs.h \
 $(top_builddir)/lib/ext2fs/ext2_types.h $(srcdir)/ext2fs.h \
 $(top_srcdir)/lib/et/com_err.h $(srcdir)/ext2_io.h \
 $(top_builddir)/lib/ext2fs/ext2_err.h $(srcdir)/bitops.h
inode.o: $(srcdir)/inode.c $(srcdir)/ext2_fs.h \
 $(top_builddir)/lib/ext2fs/ext2_types.h $(srcdir)/ext2fsP.h \
 $(srcdir)/ext2fs.h $(top_srcdir)/lib/et/com_err.h $(srcdir)/ext2_io.h \
 $(top_builddir)/lib/ext2fs/ext2_err.h $(srcdir)/bitops.h $(srcdir)/e2image.h
inode_io.o: $(srcdir)/inode_io.c $(srcdir)/ext2_fs.h \
 $(top_builddir)/lib/ext2fs/ext2_types.h $(srcdir)/ext2fs.h \
 $(top_srcdir)/lib/et/com_err.h $(srcdir)/ext2_io.h \
 $(top_builddir)/lib/ext2fs/ext2_err.h $(srcdir)/bitops.h
ismounted.o: $(srcdir)/ismounted.c $(srcdir)/ext2_fs.h \
 $(top_builddir)/lib/ext2fs/ext2_types.h $(srcdir)/ext2fs.h \
 $(top_srcdir)/lib/et/com_err.h $(srcdir)/ext2_io.h \
 $(top_builddir)/lib/ext2fs/ext2_err.h $(srcdir)/bitops.h
link.o: $(srcdir)/link.c $(srcdir)/ext2_fs.h \
 $(top_builddir)/lib/ext2fs/ext2_types.h $(srcdir)/ext2fs.h \
 $(top_srcdir)/lib/et/com_err.h $(srcdir)/ext2_io.h \
 $(top_builddir)/lib/ext2fs/ext2_err.h $(srcdir)/bitops.h
llseek.o: $(srcdir)/llseek.c $(top_srcdir)/lib/et/com_err.h \
 $(srcdir)/ext2_io.h
lookup.o: $(srcdir)/lookup.c $(srcdir)/ext2_fs.h \
 $(top_builddir)/lib/ext2fs/ext2_types.h $(srcdir)/ext2fs.h \
 $(top_srcdir)/lib/et/com_err.h $(srcdir)/ext2_io.h \
 $(top_builddir)/lib/ext2fs/ext2_err.h $(srcdir)/bitops.h
mkdir.o: $(srcdir)/mkdir.c $(srcdir)/ext2_fs.h \
 $(top_builddir)/lib/ext2fs/ext2_types.h $(srcdir)/ext2fs.h \
 $(top_srcdir)/lib/et/com_err.h $(srcdir)/ext2_io.h \
 $(top_builddir)/lib/ext2fs/ext2_err.h $(srcdir)/bitops.h
mkjournal.o: $(srcdir)/mkjournal.c $(srcdir)/ext2_fs.h \
 $(top_builddir)/lib/ext2fs/ext2_types.h $(top_srcdir)/lib/e2p/e2p.h \
 $(srcdir)/ext2fs.h $(top_srcdir)/lib/et/com_err.h $(srcdir)/ext2_io.h \
 $(top_builddir)/lib/ext2fs/ext2_err.h $(srcdir)/bitops.h \
 $(srcdir)/jfs_user.h $(srcdir)/kernel-jbd.h $(srcdir)/jfs_compat.h \
 $(srcdir)/kernel-list.h
namei.o: $(srcdir)/namei.c $(srcdir)/ext2_fs.h \
 $(top_builddir)/lib/ext2fs/ext2_types.h $(srcdir)/ext2fs.h \
 $(top_srcdir)/lib/et/com_err.h $(srcdir)/ext2_io.h \
 $(top_builddir)/lib/ext2fs/ext2_err.h $(srcdir)/bitops.h
native.o: $(srcdir)/native.c $(srcdir)/ext2_fs.h \
 $(top_builddir)/lib/ext2fs/ext2_types.h $(srcdir)/ext2fs.h \
 $(top_srcdir)/lib/et/com_err.h $(srcdir)/ext2_io.h \
 $(top_builddir)/lib/ext2fs/ext2_err.h $(srcdir)/bitops.h
newdir.o: $(srcdir)/newdir.c $(srcdir)/ext2_fs.h \
 $(top_builddir)/lib/ext2fs/ext2_types.h $(srcdir)/ext2fs.h \
 $(top_srcdir)/lib/et/com_err.h $(srcdir)/ext2_io.h \
 $(top_builddir)/lib/ext2fs/ext2_err.h $(srcdir)/bitops.h
openfs.o: $(srcdir)/openfs.c $(srcdir)/ext2_fs.h \
 $(top_builddir)/lib/ext2fs/ext2_types.h $(srcdir)/ext2fs.h \
 $(top_srcdir)/lib/et/com_err.h $(srcdir)/ext2_io.h \
 $(top_builddir)/lib/ext2fs/ext2_err.h $(srcdir)/bitops.h $(srcdir)/e2image.h
read_bb.o: $(srcdir)/read_bb.c $(srcdir)/ext2_fs.h \
 $(top_builddir)/lib/ext2fs/ext2_types.h $(srcdir)/ext2fs.h \
 $(top_srcdir)/lib/et/com_err.h $(srcdir)/ext2_io.h \
 $(top_builddir)/lib/ext2fs/ext2_err.h $(srcdir)/bitops.h
read_bb_file.o: $(srcdir)/read_bb_file.c $(srcdir)/ext2_fs.h \
 $(top_builddir)/lib/ext2fs/ext2_types.h $(srcdir)/ext2fs.h \
 $(top_srcdir)/lib/et/com_err.h $(srcdir)/ext2_io.h \
 $(top_builddir)/lib/ext2fs/ext2_err.h $(srcdir)/bitops.h
rs_bitmap.o: $(srcdir)/rs_bitmap.c $(srcdir)/ext2_fs.h \
 $(top_builddir)/lib/ext2fs/ext2_types.h $(srcdir)/ext2fs.h \
 $(top_srcdir)/lib/et/com_err.h $(srcdir)/ext2_io.h \
 $(top_builddir)/lib/ext2fs/ext2_err.h $(srcdir)/bitops.h
rw_bitmaps.o: $(srcdir)/rw_bitmaps.c $(srcdir)/ext2_fs.h \
 $(top_builddir)/lib/ext2fs/ext2_types.h $(srcdir)/ext2fs.h \
 $(top_srcdir)/lib/et/com_err.h $(srcdir)/ext2_io.h \
 $(top_builddir)/lib/ext2fs/ext2_err.h $(srcdir)/bitops.h $(srcdir)/e2image.h
swapfs.o: $(srcdir)/swapfs.c $(srcdir)/ext2_fs.h \
 $(top_builddir)/lib/ext2fs/ext2_types.h $(srcdir)/ext2fs.h \
 $(top_srcdir)/lib/et/com_err.h $(srcdir)/ext2_io.h \
 $(top_builddir)/lib/ext2fs/ext2_err.h $(srcdir)/bitops.h
test_io.o: $(srcdir)/test_io.c $(srcdir)/ext2_fs.h \
 $(top_builddir)/lib/ext2fs/ext2_types.h $(srcdir)/ext2fs.h \
 $(top_srcdir)/lib/et/com_err.h $(srcdir)/ext2_io.h \
 $(top_builddir)/lib/ext2fs/ext2_err.h $(srcdir)/bitops.h
unix_io.o: $(srcdir)/unix_io.c $(srcdir)/ext2_fs.h \
 $(top_builddir)/lib/ext2fs/ext2_types.h $(srcdir)/ext2fs.h \
 $(top_srcdir)/lib/et/com_err.h $(srcdir)/ext2_io.h \
 $(top_builddir)/lib/ext2fs/ext2_err.h $(srcdir)/bitops.h
unlink.o: $(srcdir)/unlink.c $(srcdir)/ext2_fs.h \
 $(top_builddir)/lib/ext2fs/ext2_types.h $(srcdir)/ext2fs.h \
 $(top_srcdir)/lib/et/com_err.h $(srcdir)/ext2_io.h \
 $(top_builddir)/lib/ext2fs/ext2_err.h $(srcdir)/bitops.h
valid_blk.o: $(srcdir)/valid_blk.c $(srcdir)/ext2_fs.h \
 $(top_builddir)/lib/ext2fs/ext2_types.h $(srcdir)/ext2fs.h \
 $(top_srcdir)/lib/et/com_err.h $(srcdir)/ext2_io.h \
 $(top_builddir)/lib/ext2fs/ext2_err.h $(srcdir)/bitops.h
version.o: $(srcdir)/version.c $(srcdir)/ext2_fs.h \
 $(top_builddir)/lib/ext2fs/ext2_types.h $(srcdir)/ext2fs.h \
 $(top_srcdir)/lib/et/com_err.h $(srcdir)/ext2_io.h \
 $(top_builddir)/lib/ext2fs/ext2_err.h $(srcdir)/bitops.h \
 $(top_srcdir)/version.h
write_bb_file.o: $(srcdir)/write_bb_file.c $(srcdir)/ext2_fs.h \
 $(top_builddir)/lib/ext2fs/ext2_types.h $(srcdir)/ext2fs.h \
 $(top_srcdir)/lib/et/com_err.h $(srcdir)/ext2_io.h \
 $(top_builddir)/lib/ext2fs/ext2_err.h $(srcdir)/bitops.h
tst_badblocks.o: $(srcdir)/tst_badblocks.c $(srcdir)/ext2_fs.h \
 $(top_builddir)/lib/ext2fs/ext2_types.h $(srcdir)/ext2fs.h \
 $(top_srcdir)/lib/et/com_err.h $(srcdir)/ext2_io.h \
 $(top_builddir)/lib/ext2fs/ext2_err.h $(srcdir)/bitops.h
tst_bitops.o: $(srcdir)/tst_bitops.c $(srcdir)/ext2_fs.h \
 $(top_builddir)/lib/ext2fs/ext2_types.h $(srcdir)/ext2fs.h \
 $(top_srcdir)/lib/et/com_err.h $(srcdir)/ext2_io.h \
 $(top_builddir)/lib/ext2fs/ext2_err.h $(srcdir)/bitops.h
tst_byteswap.o: $(srcdir)/tst_byteswap.c $(srcdir)/ext2_fs.h \
 $(top_builddir)/lib/ext2fs/ext2_types.h $(srcdir)/ext2fs.h \
 $(top_srcdir)/lib/et/com_err.h $(srcdir)/ext2_io.h \
 $(top_builddir)/lib/ext2fs/ext2_err.h $(srcdir)/bitops.h
tst_getsize.o: $(srcdir)/tst_getsize.c $(srcdir)/ext2_fs.h \
 $(top_builddir)/lib/ext2fs/ext2_types.h $(srcdir)/ext2fs.h \
 $(top_srcdir)/lib/et/com_err.h $(srcdir)/ext2_io.h \
 $(top_builddir)/lib/ext2fs/ext2_err.h $(srcdir)/bitops.h
tst_iscan.o: $(srcdir)/tst_iscan.c $(srcdir)/ext2_fs.h \
 $(top_builddir)/lib/ext2fs/ext2_types.h $(srcdir)/ext2fs.h \
 $(top_srcdir)/lib/et/com_err.h $(srcdir)/ext2_io.h \
 $(top_builddir)/lib/ext2fs/ext2_err.h $(srcdir)/bitops.h
